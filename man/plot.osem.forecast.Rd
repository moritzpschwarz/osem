% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.osem.forecast.R
\name{plot.osem.forecast}
\alias{plot.osem.forecast}
\title{Plot OSEM Forecast}
\usage{
\method{plot}{osem.forecast}(
  x,
  title = "OSEM Model Forecast",
  exclude.exogenous = TRUE,
  order.as.run = FALSE,
  interactive = FALSE,
  first_date = NULL,
  grepl_variables = NULL,
  return.data = FALSE,
  linewidth = 1,
  ...
)
}
\arguments{
\item{x}{An object of class osem.forecast, which is the output from the \link{forecast_model} function.}

\item{title}{Character. Title of the plot. Default is "OSEM Model Forecast".}

\item{exclude.exogenous}{Logical. Should exogenous values be plotted? Default is FALSE.}

\item{order.as.run}{Logical. Should the plots be arranged in the way that the model was run? Default FALSE.}

\item{interactive}{Logical. Should the resulting plot be launched in an interactive way (the plotly package is required for this).}

\item{first_date}{Character. First date value to be shown. Must be a character value that can be turned into a date using as.Date() or NULL.}

\item{grepl_variables}{Regular Expression Character. Can be used to select variables to be plotted. Experimental feature so use with care.}

\item{return.data}{Logical. Do not return a plot but rather just the final dataset that has been created for the plot.}

\item{linewidth}{Numeric. Linewidth argument for the plot. Default is 1.}

\item{...}{Additional arguments passed to the plotting function.}
}
\value{
A ggplot2 object or a plotly object if interactive is TRUE. If return.data is TRUE, a tibble with the data used for plotting.
}
\description{
Plot a forecast object of the OSEM Model
}
\examples{
spec <- dplyr::tibble(
type = c(
  "d",
  "d",
  "n"
),
dependent = c(
  "StatDiscrep",
  "TOTS",
  "Import"
),
independent = c(
  "TOTS - FinConsExpHH - FinConsExpGov - GCapitalForm - Export",
  "GValueAdd + Import",
  "FinConsExpHH + GCapitalForm"
)
)
\donttest{
a <- run_model(specification = spec, dictionary = NULL,
inputdata_directory = NULL, primary_source = "download",
save_to_disk = NULL, present = FALSE)
plot(forecast_model(a))
}

}

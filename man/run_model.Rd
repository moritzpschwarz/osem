% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_model.R
\name{run_model}
\alias{run_model}
\title{Runs the OSEM model}
\usage{
run_model(
  specification,
  dictionary = NULL,
  input = NULL,
  primary_source = c("download", "local"),
  save_to_disk = NULL,
  use_logs = "both",
  trend = TRUE,
  ardl_or_ecm = "ardl",
  max.ar = 4,
  max.dl = 4,
  saturation = c("IIS", "SIS"),
  saturation.tpval = 0.01,
  max.block.size = 20,
  gets_selection = TRUE,
  selection.tpval = 0.01,
  constrain.to.minimum.sample = TRUE,
  keep = NULL,
  pretest_steps = FALSE,
  present = FALSE,
  quiet = FALSE,
  plot = TRUE,
  inputdata_directory = NULL
)
}
\arguments{
\item{specification}{A tibble or data.frame with three columns. Column names must be:
'type', 'dependent', and 'independent'. The column 'type' must contain for each row a
character of either 'd' (Identity) or 'n' (Definition - i.e. will be estimated).
The column 'dependent' must contain the LHS (Y variables) and the column named
'independent' containing the RHS (x variables separated by + and -).}

\item{dictionary}{A tibble or data.frame storing the Eurostat variable code
in column 'eurostat_code' and the model variable name in 'model_varname'.
If \code{download == TRUE} then the dictionary also requires a column named
'dataset_id' that stores the Eurostat dataset id. When \code{NULL}, the
\link[=dict]{default dictionary} is used.}

\item{input}{Character vector or list. An argument to directly pass input files for the OSEM model to be run.
Can include a character path to .xlsx, .csv or .rds input files in which the data is
stored. Cannot be \code{NULL} if \code{download == FALSE}.}

\item{primary_source}{A string. Determines whether \code{"download"} or
\code{"local"} data loading takes precedence.}

\item{save_to_disk}{A path to a directory where the final dataset will be
saved, including the file name and ending. Not saved when \code{NULL}.}

\item{use_logs}{To decide whether to log any variables. Must be one of
'both', 'y', 'x', or 'none'. Default is 'both'.}

\item{trend}{Logical. Should a trend be added? Default is TRUE.}

\item{ardl_or_ecm}{Either 'ardl' or 'ecm' to determine whether to estimate
the model as an Autoregressive Distributed Lag Function (ardl) or as an
Equilibrium Correction Model (ecm).}

\item{max.ar}{Integer. The maximum number of lags to use for the AR terms. as well as for the independent variables.}

\item{max.dl}{Integer. The maximum number of lags to use for the independent variables (the distributed lags).}

\item{saturation}{Carry out Indicator Saturation using the 'isat' function
in the 'gets' package. Needs a character vector or string. Default is
'c("IIS","SIS")' to carry out Impulse Indicator Saturation and Step Indicator
Saturation. Other possible values are 'NULL' to disable or 'TIS' or Trend
Indicator Saturation. When disabled, estimation will be carried out using
the 'arx' function from the 'gets' package.}

\item{saturation.tpval}{The target p-value of the saturation methods (e.g.
SIS and IIS, see the 'isat' function in the 'gets' package). Default is 0.01.}

\item{max.block.size}{Integer. Maximum size of block of variables to be
selected over, default = 20.}

\item{gets_selection}{Logical. Whether general-to-specific selection using
the 'getsm' function from the 'gets' package should be done on the final
saturation model. Default is TRUE.}

\item{selection.tpval}{Numeric. The target p-value of the model selection
methods (i.e. general-to-specific modelling, see the 'getsm' function
in the 'gets' package). Default is 0.01.}

\item{constrain.to.minimum.sample}{Logical. Should all data series be
constrained to the minimum data series? Default is \code{TRUE}.}

\item{keep}{Character. A string that will be used as regex (in \code{grepl()})
when selection is carried out. This argument therefore requires \code{gets_selection = TRUE}.
Variables that match this character will not be selected over (see \code{\link[gets]{getsm}} for details).}

\item{pretest_steps}{Logical. Default is \code{FALSE}. This argument controls
whether isat should first be run for SIS in isolation before other saturation
methods are added (IIS, TIS). This can lead to better results if there are many
IIS identified at the end of the estimation sample/forecast origin. If \code{TRUE}
then \code{\link[gets]{isat}} is first carried out just for SIS (if activated using 'sis = TRUE'),
then the SIS breaks are pre-entered to another \code{\link[gets]{isat}} estimation but not selected over.
After both isat runs, a union model selection is done using  \code{\link[gets]{gets}}.}

\item{present}{A logical value whether the final OSEM model output
should be presented or not.}

\item{quiet}{Logical with default = FALSE. Should messages be displayed?
These messages are intended to give more information about the estimation
and data retrieval process.}

\item{plot}{Logical with default = TRUE. Should plots be displayed?}

\item{inputdata_directory}{Deprecated. Use 'input' instead.}
}
\value{
An object of class \link[=new_osem]{osem}, which is a named list
with four elements:
\describe{
\item{args}{A named list storing the user arguments for the OSEM
model.}
\item{module_order_eurostatvars}{The original specification with translated
variable names to Eurostat codes and arranged in order of estimation.}
\item{module_collection}{The above specification with two added columns
that store the model object for each module and the dataset used for
estimation, including fitted values for the dependent variable.}
\item{full_data}{A tibble or data.frame containing the complete original
data for the OSEM model and the fitted values of each module.}
}
}
\description{
Runs the OSEM model according to the given specification of modules.
}
\examples{
spec <- dplyr::tibble(
  type = c(
    "d",
    "d",
    "n"
  ),
  dependent = c(
    "StatDiscrep",
    "TOTS",
    "Import"
  ),
  independent = c(
    "TOTS - FinConsExpHH - FinConsExpGov - GCapitalForm - Export",
    "GValueAdd + Import",
    "FinConsExpHH + GCapitalForm"
  )
)
\donttest{
a <- run_model(specification = spec, dictionary = NULL,
inputdata_directory = NULL, primary_source = "download",
save_to_disk = NULL, present = FALSE)
}
}
